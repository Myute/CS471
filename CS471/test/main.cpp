#pragma once

#include <iostream>
#include <chrono>
#include <stdio.h>
#include "Piece.h"
using namespace std;

void render(string[][12]);
void tick();
void removeLine(int, string[][12]);
int main() {
	bool run = true;
	int press = 0;
	int score = 0;
	using clock = std::chrono::high_resolution_clock;
	std::chrono::nanoseconds lag(0ns);
	auto time_start=clock::now();

	string board[][12] = {
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 20
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 19
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 18
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 17
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 16
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 15
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 14
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 13
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 12
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 11
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 10
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 9
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 8		
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 7
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 6		
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 5
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 4		
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 3
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 2
		{"\033[1;37m█\033[0m"," "," "," "," "," "," "," "," "," "," ","\033[1;37m█\033[0m"}, // 1
		{"\033[1;37m█\033[0m","\033[1;37m█\033[0m","\033[1;37m█\033[0m","\033[1;37m█\033[0m","\033[1;37m█\033[0m","\033[1;37m█\033[0m","\033[1;37m█\033[0m","\033[1;37m█\033[0m","\033[1;37m█\033[0m","\033[1;37m█\033[0m","\033[1;37m█\033[0m","\033[1;37m█\033[0m"}  // 21
	};
	for(int i = 0; i < 21; i++) {
		for(int y = 0; y < 12; y++)
			cout << board[i][y];
		cout << endl;
	}
	system("stty raw");

	while(run) {
		auto deltaTime=clock::now() - time_start;
		time_start=clock::now();
		lag+=std::chrono::duration_cast<std::chrono::nanoseconds>(delta_time);
		
		if(timeSinceLastTick >= tickDelta) {
			tick();
			timeSinceLastTick = 0;
		}
		if(timeSinceLastRender >= renderDelta) {
			render(board);
			timeSinceLastRender = 0;
		}
	}
	system("stty cooked");
	return 0;
}

void tick() {
	// do stuff
}

void render(string board[][12]) {
	system("clear"); // clear console
	// render board
	for(int i = 0; i < 21; i++) {
		for(int y = 0; y < 12; y++)
			cout << board[i][y];
		cout << endl;
	}
}

void removeLine(int row, string board[][12]) {
	for(int i = row; i < 21; i++) {
		
	}
}